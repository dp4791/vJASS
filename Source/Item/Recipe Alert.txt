library RecipeAlert uses Recipe, Hero

    public function Proc takes unit hero, integer itemId returns nothing
        local RecipeList recipeList = RecipeList.create()
        local Recipe recipe
        local integer recipeIndex
        
        local integer slotIndex
        local item array usableItems
        local integer array usableIds
        local integer usableCount
        local boolean possible
        
        local integer matIndex
        local integer matId
        local integer matCount
        local integer totalCount
        local integer i
        
        /* 해당 아이템으로 조합 가능한 목록 작성 */
        call recipeList.add_related(itemId)
        
        /* 조합 가능한 아이템이 있다면 */
        if recipeList.count > 0 then
            /* 영웅이 가지고 있는 아이템을 목록으로 작성 */
            set slotIndex = UnitInventorySize(hero)
            set usableCount = 0
            loop
                exitwhen slotIndex == 0
                set slotIndex = slotIndex - 1
                
                set usableItems[usableCount] = UnitItemInSlot(hero, slotIndex)
                
                if usableItems[usableCount] != null then
                    set usableIds[usableCount] = GetItemTypeId(usableItems[usableCount])
                    
                    if Recipe.isValidMat(usableIds[usableCount]) then
                        set usableCount = usableCount + 1
                    endif
                endif
            endloop
            
            /* 조합 가능한 목록을 하나 하나 체크 */
            set recipeIndex = recipeList.count
            loop
                if recipeIndex == 0 then
                    set recipe = 0
                    exitwhen true
                endif
                
                set recipeIndex = recipeIndex - 1
                set recipe = recipeList.get(recipeIndex)
                
                if recipe.result != itemId and usableCount >= recipe.count then
                    set totalCount = recipe.totalCount /* 총 필요한 재료 갯수 */
                    set matIndex = recipe.count /* 재료 종류 숫자 */
                    
                    loop
                        exitwhen matIndex == 0
                        set matIndex = matIndex - 1
                        set matId = recipe.getMatId(matIndex)
                        set matCount = recipe.getMatCount(matIndex)
                        
                        set possible = false
                        set i = usableCount
                        loop
                            exitwhen i == 0
                            set i = i - 1
                            
                            if usableIds[i] == matId and CheckCharges(usableItems[i], matCount) then
                                set totalCount = totalCount - matCount /* 필요한 재료 갯수에서 해당 재료 종류의 숫자만큼 빼준다 */
                                set possible = true
                                
                                exitwhen true
                            endif
                        endloop
                        
                        exitwhen not possible
                    endloop
                    
                    exitwhen totalCount == 0 /* 필요한 재료 갯수를 전부 만족시켰다면 여기서 종료 (이 시점의 recipe을 참조) */
                endif
            endloop
            
            if recipe != 0 then
                call Hero[hero].user.notify("현재 아이템을 가지고 '" + GetObjectName(recipe.result) + "'을(를) 만들 수 있습니다!")
            endif
            
            loop
                exitwhen usableCount == 0
                set usableCount = usableCount - 1
                set usableItems[usableCount] = null
            endloop
        endif
        
        call recipeList.destroy()
    endfunction
    
endlibrary